@AmazonRedshift
Feature:AmazonRedshift: verification of Lineage for AmazonRedshiftProcessor Plugin
  Description: MLP-17257 Validation of Redshift lineage support for external tables in Redshift spectrum and Redshift views
  MLP - 16095 Create a Redshift View Lineage for Simple view on multiple tables


  @precondition
  Scenario: MLP-17257:SC1#Update credential payload json for Amazon Redshift
    Given User update the below "redshift credentials" in following files using json path
      | filePath                                                        | username    | password    |
      | ida/AmazonRedshiftPostProcessorPayloads/CredentialsSuccess.json | $..userName | $..password |

  @MLP-17257 @sanity @positive @regression
  Scenario: Add valid Credentials for AmazonRedshift
    Then Execute REST API with following parameters
      | Header           | Query | Param | type | url                                       | body                                                            | response code | response message | jsonPath |
      | application/json | raw   | false | Put  | settings/credentials/Redshift_Credentials | ida/AmazonRedshiftPostProcessorPayloads/CredentialsSuccess.json | 200           |                  |          |
      |                  |       |       | Get  | settings/credentials/Redshift_Credentials |                                                                 | 200           |                  |          |

  @RedShift @positve @regression @sanity
  Scenario Outline:MLP-17257:SC2#Run th Pluginconfigurations for DataSource and AmazonS3Cataloger
    Given endpoint for "<ServiceName>" for "<ServiceUser>" having "<Header>" and query param with "<Query>" "<Param>" for request type "<type>" with url "<url>" and body "<body>" and verify "<response code>" and "<response message>" using "<jsonPath>"
    Examples:
      | ServiceName | ServiceUser    | Header           | Query | Param | type         | url                                                                                                | body                                                                      | response code | response message      | jsonPath                                                   |
      | IDC         | TestSystemUser | application/json | raw   | false | Put          | settings/analyzers/AmazonRedshiftDataSource                                                        | ida/AmazonRedshiftPostProcessorPayloads/AmazonRedshiftDataSource.json     | 204           |                       |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | Get          | settings/analyzers/AmazonRedshiftDataSource                                                        |                                                                           | 200           | RedshiftDataSource    |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | Put          | settings/analyzers/AmazonRedshiftCataloger                                                         | ida/AmazonRedshiftPostProcessorPayloads/RedshiftCataloger_filter.json     | 204           |                       |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | Get          | settings/analyzers/AmazonRedshiftCataloger                                                         |                                                                           | 200           | RedShiftCataloger     |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | RecursiveGet | extensions/analyzers/status/LocalNode/cataloger/AmazonRedshiftCataloger/RedShiftCataloger          |                                                                           | 200           | IDLE                  | $.[?(@.configurationName=='RedShiftCataloger')].status     |
      | IDC         | TestSystemUser | application/json | raw   | false | Post         | extensions/analyzers/start/LocalNode/cataloger/AmazonRedshiftCataloger/RedShiftCataloger           | ida/AmazonRedshiftPostProcessorPayloads/empty.json                        | 200           |                       |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | RecursiveGet | extensions/analyzers/status/LocalNode/cataloger/AmazonRedshiftCataloger/RedShiftCataloger          |                                                                           | 200           | IDLE                  | $.[?(@.configurationName=='RedShiftCataloger')].status     |
      | IDC         | TestSystemUser | application/json | raw   | false | Put          | settings/analyzers/AmazonRedshiftPostProcessor                                                     | ida/AmazonRedshiftPostProcessorPayloads/RedshiftPostProcessor_filter.json | 204           |                       |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | Get          | settings/analyzers/AmazonRedshiftPostProcessor                                                     |                                                                           | 200           | RedshiftPostProcessor |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | RecursiveGet | extensions/analyzers/status/InternalNode/lineage/AmazonRedshiftPostProcessor/RedshiftPostProcessor |                                                                           | 200           | IDLE                  | $.[?(@.configurationName=='RedshiftPostProcessor')].status |
      | IDC         | TestSystemUser | application/json | raw   | false | Post         | extensions/analyzers/start/InternalNode/lineage/AmazonRedshiftPostProcessor/RedshiftPostProcessor  | ida/AmazonRedshiftPostProcessorPayloads/empty.json                        | 200           |                       |                                                            |
      | IDC         | TestSystemUser | application/json | raw   | false | RecursiveGet | extensions/analyzers/status/InternalNode/lineage/AmazonRedshiftPostProcessor/RedshiftPostProcessor |                                                                           | 200           | IDLE                  | $.[?(@.configurationName=='RedshiftPostProcessor')].status |


  #MLP-17257 - #6888707 to #6888722
  #MLP-16095 - #6887298 to #6888721
  @RedShift @positve @regression @sanity
  Scenario: SC#1: user get all lineage hops id,s and get the source target value from database
    Given user retrieves all lineage hops values for below parameters
      | database      | retrive              | catalog | type  | lineageFlow  | name                                     | asg_scopeid | targetFile                                                   | jsonpath |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromsingletablewithcondt             |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfrommultipletablewithcondt           |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromdiffschemamultipletablewithcondt |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfrommultipletableusingjoin           |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromtableusingunionall               |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromcomplexstatement                 |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromsingletable                      |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfrommultipletable                    |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromdiffschemamultipletable          |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromview                             |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfrommultipleview                     |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
      | APPDBPOSTGRES | bulkFunctionHopNames | Default | Table | Table-->hops | viewfromtableandview                     |             | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json |          |
    And user hits the following API with given parameters and store the api response in file
      | ServiceName | ServiceUser    | Header           | Query | Param | type | url                                                                                     | bodyFile                                                     | path                                                       | response code | response message | jsonPath | targetFile                                                            |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromsingletablewithcondt             | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfrommultipletablewithcondt           | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromdiffschemamultipletablewithcondt | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfrommultipletableusingjoin           | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromtableusingunionall               | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromcomplexstatement                 | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromsingletable                      | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfrommultipletable                    | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromdiffschemamultipletable          | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromview                             | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfrommultipleview                     | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
      | IDC         | TestSystemUser | application/json |       |       | Post | lineages/Default?dir=OUT&lineageDepth=0&exclude=MULTIHOP&excludeUnusedViewColumns=false | response/RedshiftPostProcessor/actualJsonFiles/tableIDs.json | $.lineagePayLoads.viewfromtableandview                     | 200           |                  | edges    | response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |
    And user retrieves the name of each id stored in files with below parameters
      | fileName                                                                                | JsonPath                                 |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromsingletablewithcondt             |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfrommultipletablewithcondt           |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromdiffschemamultipletablewithcondt |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfrommultipletableusingjoin           |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromtableusingunionall               |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromcomplexstatement                 |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromsingletable                      |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfrommultipletable                    |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromdiffschemamultipletable          |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromview                             |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfrommultipleview                     |
      | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json | viewfromtableandview                     |


  @RedShift @positve @regression @sanity
  Scenario Outline: SC#1 user compares the expected lineage data and actual lineage data
    Given user json assert between "<expectedJson>" data and "<actualJson>" data
    Examples:
      | expectedJson                                                                                | actualJson                                                                              |
      | Constant.REST_DIR/response/RedshiftPostProcessor/expectedJsonFiles/expectedLineagehops.json | Constant.REST_DIR/response/RedshiftPostProcessor/actualJsonFiles/actualLineagehops.json |


  @RedShift @positve @regression @sanity
  Scenario:Delete id's
    And Delete multiple values in IDC UI with below parameters
      | deleteAction     | catalog | name                                                             | type     | query | param |
      | MultipleIDDelete | Default | cataloger/AmazonRedshiftCataloger/%                              | Analysis |       |       |
      | MultipleIDDelete | Default | lineage/AmazonRedshiftPostProcessor/%                            | Analysis |       |       |
      | MultipleIDDelete | Default | redshift-cluster-1.csvp5wcqqxvw.us-east-1.redshift.amazonaws.com | Cluster  |       |       |


  @RedShift @positve @regression @sanity @webtest
  Scenario: Delete plugin Configurations
    Given  Execute REST API with following parameters
      | Header           | Query | Param | type   | url                                         | body | response code | response message | jsonPath |
      | application/json |       |       | Delete | settings/analyzers/AmazonRedshiftDataSource |      | 204           |                  |          |
      |                  |       |       | Delete | settings/analyzers/AmazonRedshiftCataloger  |      | 204           |                  |          |
      |                  |       |       | Delete | settings/credentials/Redshift_Credentials   |      | 200           |                  |          |
